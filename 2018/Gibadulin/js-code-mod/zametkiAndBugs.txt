***не работает***
jscodeshift -t jsCodeMod\transforms\change-call-function-style.js <file> --old=<code> --new=<code>

example: jscodeshift -t js-code-mod\transforms\change-call-function-style.js Node-js\things.js
         --old api --new = 'api.show1(p1).show2(p2)'
***не работает***

Не работает со строчками вида m1().m2(). nomnom просто не переносит их.


Если аргумент - литерал, то он воспринимается как часть шаблона, иначе продолжается сравнение.


Массив аргументов - глобальная переменная, нужно переделать.


Заполнить файлик package.json.


Сделать тесты, а не мучать файл forTest.js.


--old --new - код из одного js-предложения, если больше одного предложения, то оставшиеся игнорируются.
              Можно и не только из одного, но нужно серьезно править получение аргументов и добавлять фор.


Воспользоваться решением проблемы удаления ведущих комментариев (см github)


Не лезет внутрь строк body. Переделать несложно.
См. forTest.js. Сюда же можно отнести вопрос о добавлении новых методов к typeComparator
либо вопрос о переделывании typeComparator для универсальности: как вариант сравнивать "почти все" свойства объекта.


Переменная changedNewCall каждый раз преобразуется обратно в код, а попытки по свойствам parent
вернуться к изначальному ast не увенчались успехом, так как предки содержат не обновленную информацию
