Git
- https://www.atlassian.com/git/tutorials/learn-git-with-bitbucket-cloud

SOLID
- https://sahandsaba.com/nine-anti-patterns-every-programmer-should-be-aware-of-with-examples.html

- Single Responsibility
- Open / Closed
- Liskov substitution
Пусть q(x) является свойством, верным относительно объектов x некоторого типа T. 
Тогда q(y) также должно быть верным для объектов y типа S, где S является подтипом типа T.
- Interface segregation
- DI -> Dependecy Injection

KISS
- Keep it simple, stupid

Clean Code
- https://www.investigatii.md/uploads/resurse/Clean_Code.pdf
- pg 7
- The Boy Scout Rule
- regions

- comments (pg.58)
	- name-name pattern

- searchable names

- Code review? For what?
- Review a code, not a person
- https://www.sitepoint.com/the-importance-of-code-reviews/

- OverEngineering
https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition

- SourceCode
https://referencesource.microsoft.com/#mscorlib/system/collections/generic/list.cs,36
- or reflector, or rehsarper or any other decompiler

- bad code ex #1
public class Class1
{
  public decimal Calculate(decimal amount, int type, int years)
  {
    decimal result = 0;
    decimal disc = (years > 5) ? (decimal)5/100 : (decimal)years/100; 
    if (type == 1
    {
      result = amount;
    }
    else if (type == 2)
    {
      result = (amount - (0.1m * amount)) - disc * (amount - (0.1m * amount));
    }
    else if (type == 3)
    {
      result = (0.7m * amount) - disc * (0.7m * amount);
    }
    else if (type == 4)
    {
      result = (amount - (0.5m * amount)) - disc * (amount - (0.5m * amount));
    }
    return result;
  }
}

- ex #2
http://geekswithblogs.net/mrsteve/archive/2011/08/03/c-sharp-interview-questions-bad-code.aspx
